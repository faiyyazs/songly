// Mocks generated by Mockito 5.4.4 from annotations
// in songly/test/src/presentation/dashboard/dashboard_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:domain/src/repository/songs_repository.dart' as _i2;
import 'package:domain/src/usecase/fetch_trending_songs.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared/shared.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSongsRepository_0 extends _i1.SmartFake
    implements _i2.SongsRepository {
  _FakeSongsRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FetchTrendingSongsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchTrendingSongsUseCase extends _i1.Mock
    implements _i3.FetchTrendingSongsUseCase {
  MockFetchTrendingSongsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SongsRepository get songsRepository => (super.noSuchMethod(
        Invocation.getter(#songsRepository),
        returnValue: _FakeSongsRepository_0(
          this,
          Invocation.getter(#songsRepository),
        ),
      ) as _i2.SongsRepository);

  @override
  _i4.Future<List<_i5.Song>> execute(
          {required _i3.FetchTrendingSongsUseCaseParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<List<_i5.Song>>.value(<_i5.Song>[]),
      ) as _i4.Future<List<_i5.Song>>);
}
